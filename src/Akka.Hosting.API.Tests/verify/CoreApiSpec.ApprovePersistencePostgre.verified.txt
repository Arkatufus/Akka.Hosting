[assembly: System.Runtime.CompilerServices.InternalsVisibleTo("Akka.Persistence.Hosting.Tests")]
namespace Akka.Persistence.PostgreSql.Hosting
{
    public static class AkkaPersistencePostgreSqlHostingExtensions
    {
        public static Akka.Hosting.AkkaConfigurationBuilder WithPostgreSqlPersistence(this Akka.Hosting.AkkaConfigurationBuilder builder, Akka.Persistence.PostgreSql.Hosting.PostgreSqlJournalOptions? journalOptions = null, Akka.Persistence.PostgreSql.Hosting.PostgreSqlSnapshotOptions? snapshotOptions = null) { }
        public static Akka.Hosting.AkkaConfigurationBuilder WithPostgreSqlPersistence(this Akka.Hosting.AkkaConfigurationBuilder builder, System.Action<Akka.Persistence.PostgreSql.Hosting.PostgreSqlJournalOptions>? journalOptionConfigurator = null, System.Action<Akka.Persistence.PostgreSql.Hosting.PostgreSqlSnapshotOptions>? snapshotOptionConfigurator = null, bool isDefaultPlugin = true) { }
        public static Akka.Hosting.AkkaConfigurationBuilder WithPostgreSqlPersistence(this Akka.Hosting.AkkaConfigurationBuilder builder, string connectionString, Akka.Persistence.Hosting.PersistenceMode mode = 0, string schemaName = "public", bool autoInitialize = false, Akka.Persistence.PostgreSql.StoredAsType storedAsType = 0, bool sequentialAccess = false, bool useBigintIdentityForOrderingColumn = false, System.Action<Akka.Persistence.Hosting.AkkaPersistenceJournalBuilder>? journalBuilder = null, string pluginIdentifier = "postgresql", bool isDefaultPlugin = true) { }
    }
    public sealed class PostgreSqlJournalOptions : Akka.Persistence.Hosting.SqlJournalOptions
    {
        public PostgreSqlJournalOptions() { }
        public PostgreSqlJournalOptions(bool isDefaultPlugin, string identifier = "postgresql") { }
        protected override Akka.Configuration.Config InternalDefaultConfig { get; }
        public Akka.Persistence.PostgreSql.StoredAsType StoredAs { get; set; }
        public bool UseBigIntIdentityForOrderingColumn { get; set; }
        public override string Identifier { get; set; }
        public override string MetadataTableName { get; set; }
        public override System.Data.IsolationLevel ReadIsolationLevel { get; set; }
        public override string SchemaName { get; set; }
        public override bool SequentialAccess { get; set; }
        public override string TableName { get; set; }
        public override System.Data.IsolationLevel WriteIsolationLevel { get; set; }
        protected override System.Text.StringBuilder Build(System.Text.StringBuilder sb) { }
    }
    public sealed class PostgreSqlSnapshotOptions : Akka.Persistence.Hosting.SqlSnapshotOptions
    {
        public PostgreSqlSnapshotOptions() { }
        public PostgreSqlSnapshotOptions(bool isDefaultPlugin, string identifier = "postgresql") { }
        protected override Akka.Configuration.Config InternalDefaultConfig { get; }
        public Akka.Persistence.PostgreSql.StoredAsType StoredAs { get; set; }
        public override string Identifier { get; set; }
        public override System.Data.IsolationLevel ReadIsolationLevel { get; set; }
        public override string SchemaName { get; set; }
        public override bool SequentialAccess { get; set; }
        public override string TableName { get; set; }
        public override System.Data.IsolationLevel WriteIsolationLevel { get; set; }
        protected override System.Text.StringBuilder Build(System.Text.StringBuilder sb) { }
    }
    public static class StoredAsExtensions { }
}